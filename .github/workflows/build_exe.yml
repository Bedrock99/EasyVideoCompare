name: Build Executable (Windows)

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get version from version.py
      id: get_version
      run: |
        $version = python -c "from version import __version__; print(__version__)"
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Build executable with cx_Freeze
      run: python setup.py build

    - name: Zip build output
      run: |
        $zipName = "build/windows-build-${{ steps.get_version.outputs.version }}-${{ github.sha }}.zip"
        Compress-Archive -Path build\* -DestinationPath $zipName

    - name: Upload build artifact for workflow
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-${{ steps.get_version.outputs.version }}-${{ github.sha }}
        path: build/windows-build-${{ steps.get_version.outputs.version }}-${{ github.sha }}.zip

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          Automatischer Build f√ºr Version ${{ steps.get_version.outputs.version }} (Commit ${{ github.sha }}).
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/windows-build-${{ steps.get_version.outputs.version }}-${{ github.sha }}.zip
        asset_name: windows-build-${{ steps.get_version.outputs.version }}-${{ github.sha }}.zip
        asset_content_type: application/zip
